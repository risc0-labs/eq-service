# Use `source .env` to load items, likely you actually want
# ```sh
# set -a  # Automatically export variables
# source .env
# set +a  # Stop auto-exporting
# <run some commands that need these vars>
# ```
#
# DO NOT wrap variables in quotes (THING=stuff is correct, not THING="stuff")
# Otherwise passing them to docker/podman may fail.
#
# ALL VARIABLES need to be \n terminated, no whitespace trimming happens

#### Dependant & Provider Settings

# To get a new token, see https://docs.celestia.org/tutorials/node-tutorial#auth-token
# Locally running nodes can use:
# celestia <node-type> auth admin --p2p.network <network>
CELESTIA_NODE_AUTH_TOKEN=never-gonna-give-you-up
CELESTIA_NODE_HTTP=http://127.0.0.1:26658
# Explicit port for docker (can't compute with --env-file)
# NOTE: Monitoring assumes that this is 26658
CELESTIA_NODE_PORT=26658

#### Service Settings

EQ_DB_PATH=/tmp/db-eq-service-testing
# Expects a socket with ip & port specified (not transport)
EQ_SOCKET=127.0.0.1:50051
# Explicit port for docker (can't compute with --env-file)
EQ_PORT=50051
EQ_PROTO_DIR=./common/proto
EQ_PROMETHEUS_SOCKET=0.0.0.0:9091
# Explicit port for docker (can't compute with --env-file)
# NOTE: Monitoring assumes that this is 9091
EQ_PROMETHEUS_PORT=9091

# For using the Boundless Prover network

RPC_URL=https://ethereum-sepolia-rpc.publicnode.com
PRIVATE_KEY=0x0000

## Boundless Order Configuration

ORDER_MIN_PRICE=0.0 # in Ether
ORDER_MAX_PRICE=0.0001
ORDER_RAMP_UP_PERIOD=300 # in seconds
ORDER_TIMEOUT=3600 # 1 hour
ORDER_LOCK_TIMEOUT=2700 # 45 minutes

## Boundless Storage Configuration

# You can either use IPFS via Pinata or S3 for distributing the input data and program to provers
# Just set the variables for the provider you want to use, leave the others empty.

PINATA_JWT=abcdef

S3_ACCESS_KEY=abcdef
S3_SECRET_KEY=abcdef
S3_BUCKET=bucket-name
S3_URL=https://bucket-url
AWS_REGION=us-east-1

#### Development Settings

DOCKER_CONTAINER_NAME="ghcr.io/celestiaorg/eq-service"

#### Monitoring Settings

##### Monitoring Service Ports
PROMETHEUS_PORT=9090
ALERTMANAGER_PORT=9093
GRAFANA_PORT=3000
NODE_EXPORTER_PORT=9100
CADVISOR_PORT=8080
BLACKBOX_EXPORTER_PORT=9115

##### Grafana Configuration
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin
GF_USERS_ALLOW_SIGN_UP=false
GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

##### Alert Receiver Configuration
RECEIVER_DEBUG=false
RECEIVER_PORT=2021

##### Prometheus Configuration
PROMETHEUS_RETENTION=200h
